"""
Django settings for test_bookmanagement project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import pymysql
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!p&+!gb53lcluv7)5ok_3d4m1-*2w-o4b2e8^@*gw)3mab(co_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS =  ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'test_bookmanagement',
    'Userapp',
    'bookapp',
    'shopping',
    'Rating',
]
AUTH_USER_MODEL = 'Userapp.User'
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'test_bookmanagement.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS':  ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'test_bookmanagement.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '9900book', # 数据库名称
        'USER': 'root', # 用户名
        'PASSWORD': '1329455149', # 密码
        'HOST': 'localhost', # 数据库主机
        'PORT': '3306', # 数据库端口（默认为3306）
        # 'OPTIONS': {'charset': 'utf8mb4'},
        'OPTIONS': {
        'charset': 'utf8mb4',
        'autocommit': True,
        'sql_mode': 'traditional',
        },
        'CONN_MAX_AGE': 3600,
        'USE_TZ': False,
    }

}
# CSRF_COOKIE_SECURE = False
# CSRF_COOKIE_HTTPONLY = False

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# - -- ----- ----- add-------------------
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'frontend/src/page')]
# STATIC_URL='/static/'
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
]
# CORS_ALLOW_CREDENTIALS = True
# CORS_ORIGIN_WHITELIST = ['localhost:3000']
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}
# 'DIRS': [
#         os.path.join(BASE_DIR, 'frontend/src'),
#     ]

# STATICFILES_DIRS = [
#     BASE_DIR / "static",
# ]
# STATIC_URL = '/static/'
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# STATICFILES_DIRS = [
#     ('css',os.path.join(STATIC_ROOT, 'css')),
#     ('js',os.path.join(STATIC_ROOT, 'js')),
#     ('img',os.path.join(STATIC_ROOT, 'img')),
# ]
# INSTALLED_APPS = [
#     # ...
#     'corsheaders',
#     # ...
# ]
#
# MIDDLEWARE = [
#     # ...
#     'corsheaders.middleware.CorsMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     # ...
# ]

CORS_ORIGIN_WHITELIST = [
    'http://localhost:3000',
    # 添加其他允许的来源
]
# import pymysql
#
# pymysql.install_as_MySQLdb()
# """
# 把账号密码修改为你的
# """
# DATABASES_NAME = 'book_master'  # 数据库名称
# DATABASES_USER = 'root'  # 数据库用户名，按实际情况填写你的
# DATABASES_PASSWORD = 'ljh62824310'  # 数据库密码，按实际情况填写你的
# REDIS_PASSWORD = 'ljh62824310'  # redis密码，按实际情况填写你的
#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',  # 修改数据库为MySQL，并进行配置
#         'NAME': DATABASES_NAME,  # 数据库名称
#         'USER': DATABASES_USER,  # 你的用户名，
#         'PASSWORD': DATABASES_PASSWORD,  # 你的密码
#         'HOST': 'localhost',
#         'PORT': 3306,
#         'OPTIONS': {'charset': 'utf8mb4', }
#     }
# }

# from django.conf import settings
#
# port = settings.PORT
# print(port)
CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOW_CREDENTIALS = True
# CORS_ORIGIN_WHITELIST = (
#     'http://localhost:3000',
# )
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'luojuehao@gmail.com'
EMAIL_HOST_PASSWORD = 'ojxubhkrdgaywnwy'
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' # 指定邮件后端
# EMAIL_HOST = 'smtp.qq.com' 	# 发邮件主机
# EMAIL_PORT = 25 			# 发邮件端口,qq官方推荐 465和 587,但发送不成功,所以使用端口 25
# EMAIL_HOST_USER = '623872512@qq.com' 		# 授权的邮箱
# EMAIL_HOST_PASSWORD = 'fvjsplokwradbaci' 	# 邮箱授权时获得的授权码，非注册登录密码
# # 与SMTP服务器通信时, 是否启动TLS连接(安全连接), 默认为False
# EMAIL_USE_TLS = False    # 使用 True 可能发送不成功, 所以这里使用 False
# EMAIL_FROM = 'django<623872512@qq.com>'	# 发件人抬头
# ————————————————

MEDIA_ROOT = 'E:\\test_bookmanagement\\images'
MEDIA_URL = '/media/'

import os
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "test_bookmanagement.settings")